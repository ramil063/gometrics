// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/ramil063/gometrics/cmd/server/storage/db (interfaces: DataBaser)

// Package db is a generated GoMock package.
package db

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockDataBaser is a mock of DataBaser interface.
type MockDataBaser struct {
	ctrl     *gomock.Controller
	recorder *MockDataBaserMockRecorder
}

// MockDataBaserMockRecorder is the mock recorder for MockDataBaser.
type MockDataBaserMockRecorder struct {
	mock *MockDataBaser
}

// NewMockDataBaser creates a new mock instance.
func NewMockDataBaser(ctrl *gomock.Controller) *MockDataBaser {
	mock := &MockDataBaser{ctrl: ctrl}
	mock.recorder = &MockDataBaserMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDataBaser) EXPECT() *MockDataBaserMockRecorder {
	return m.recorder
}

// CheckPing mocks base method.
func (m *MockDataBaser) CheckPing() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CheckPing")
	ret0, _ := ret[0].(error)
	return ret0
}

// CheckPing indicates an expected call of CheckPing.
func (mr *MockDataBaserMockRecorder) CheckPing() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CheckPing", reflect.TypeOf((*MockDataBaser)(nil).CheckPing))
}

// Init mocks base method.
func (m *MockDataBaser) Init(arg0 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Init", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Init indicates an expected call of Init.
func (mr *MockDataBaserMockRecorder) Init(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Init", reflect.TypeOf((*MockDataBaser)(nil).Init), arg0)
}
